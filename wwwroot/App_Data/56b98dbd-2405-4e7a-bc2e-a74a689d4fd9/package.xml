<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<umbPackage>
  <files>
    <file>
      <guid>PageViews.cshtml</guid>
      <orgPath>/macroScripts</orgPath>
      <orgName>PageViews.cshtml</orgName>
    </file>
    <file>
      <guid>Refactored.UmbracoExtensions.dll</guid>
      <orgPath>/bin</orgPath>
      <orgName>Refactored.UmbracoExtensions.dll</orgName>
    </file>
    <file>
      <guid>Refactored.UmbracoViewCounter.dll</guid>
      <orgPath>/bin</orgPath>
      <orgName>Refactored.UmbracoViewCounter.dll</orgName>
    </file>
    <file>
      <guid>PackageActionsContrib.dll</guid>
      <orgPath>/bin</orgPath>
      <orgName>PackageActionsContrib.dll</orgName>
    </file>
    <file>
      <guid>ViewCountExample.xslt</guid>
      <orgPath>/xslt</orgPath>
      <orgName>ViewCountExample.xslt</orgName>
    </file>
  </files>
  <info>
    <package>
      <name>Refactored Content Views</name>
      <version>0.6.1</version>
      <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
      <url>http://refactored.com.au</url>
      <requirements>
        <major>3</major>
        <minor>0</minor>
        <patch>0</patch>
      </requirements>
    </package>
    <author>
      <name>Robert Foster</name>
      <website>http://refactored.com.au/blog</website>
    </author>
    <readme><![CDATA[The Refactored Content Views package is essentially a content views (number of times  viewed) counter.  The current functionality offered by this package includes:

* Optional Data Type that allows for configuring view counters with various categories and the ability to instruct Macros etc. to “hide” the view Count yet still increment it.

* Optional incrementing when displaying the view count (useful when you want to display the view count in a content listing, for example)

* Example Razor Script and Macro.
* Example ViewCountExample.xslt file (no macro provided)

* Library methods to manipulate the counters and retrieve details as an XML fragment for use with XSLT.

* Update: added GetViewCountSince methods to retrieve the number of Views since a particular date if View Count History is enabled.

UPDATED in 0.6.1: fixed a bug where the XSLT library function GetViews would increment the view count twice.  Now only incrementing once.
]]></readme>
  </info>
  <DocumentTypes />
  <Templates />
  <Stylesheets />
  <Macros>
    <macro>
      <name>Page Views</name>
      <alias>PageViews</alias>
      <scriptType>
      </scriptType>
      <scriptAssembly>
      </scriptAssembly>
      <xslt>
      </xslt>
      <useInEditor>False</useInEditor>
      <refreshRate>0</refreshRate>
      <scriptingFile>PageViews.cshtml</scriptingFile>
      <properties>
        <property name="Increment" alias="Increment" show="True" propertyType="bool" />
        <property name="Category" alias="Category" show="True" propertyType="text" />
      </properties>
    </macro>
  </Macros>
  <DictionaryItems />
  <Languages />
  <DataTypes>
    <DataType Name="View Count" Id="d9c78b8a-33a9-4116-bea1-c56737db616a" Definition="dbad6449-7fdd-470f-ae7b-c38e9cf35405">
      <PreValues>
        <PreValue Id="24" Value="0" />
        <PreValue Id="25" Value="" />
      </PreValues>
    </DataType>
  </DataTypes>
  <Actions>
    <Action runat="install" undo="false" alias="ExecuteSql"><![CDATA[
CREATE TABLE [refViewCount](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[nodeId] [int] NOT NULL,
	[count] [int] NOT NULL,
	[lastViewed] [datetime] NOT NULL,
	[category] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_refViewCount] PRIMARY KEY CLUSTERED ( [id] ASC ))
]]></Action>
    <Action runat="install" undo="false" alias="ExecuteSql"><![CDATA[
CREATE TABLE [refViewCountHistory](
	[counterId] [int] NOT NULL,
	[updated] [datetime] NOT NULL,
	[reset] [bit] NOT NULL)
]]></Action>
    <Action runat="install" undo="false" alias="ExecuteSql"><![CDATA[
ALTER TABLE [refViewCountHistory]  WITH CHECK ADD  CONSTRAINT [FK_refViewCountHistory_refViewCount] FOREIGN KEY([counterId])
REFERENCES [refViewCount] ([id])
ON DELETE CASCADE
]]></Action>
    <Action runat="install" undo="false" alias="ExecuteSql"><![CDATA[ALTER TABLE [refViewCountHistory] CHECK CONSTRAINT [FK_refViewCountHistory_refViewCount]]]></Action>
    <Action runat="install" undo="false" alias="ExecuteSql"><![CDATA[
CREATE TABLE [refViewCountConfig](
	[nodeId] [int] NOT NULL,
	[category] [nvarchar](100) NULL,
	[hideCounter] [bit] NOT NULL,
	[enableHistory] [bit] NOT NULL
)
]]></Action>
    <Action runat="uninstall" undo="false" alias="ExecuteSql"><![CDATA[DROP TABLE [refViewCountHistory]]]></Action>
    <Action runat="uninstall" undo="false" alias="ExecuteSql"><![CDATA[DROP TABLE [refViewCount]]]></Action>
    <Action runat="uninstall" undo="false" alias="ExecuteSql"><![CDATA[DROP TABLE [refViewCountConfig]]]></Action>
  </Actions>
</umbPackage>